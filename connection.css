html, body {
    width: 100%;
    height: 100%;
    margin: 0;
    padding: 0;
}

.satic-area {
    position: relative;
    width: 100%;
    height: 100%;
    background: url(../img/poster-about.jpg) no-repeat center;
    background-size: cover;
}

/* Background Animations */
.dynamic-area1 {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    background: url(../img/poster-drop-animate2.png) repeat-x 0px 0px;
    background-size: cover;
    animation: posterDrop1 6000s linear infinite;
}

@keyframes posterDrop1 {
    from { background-position: 0 0; }
    to { background-position: 4000% 0; }
}

.dynamic-area2 {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    background: url(../img/poster-drop-animate1.png) repeat-x 0px 0px;
    background-size: cover;
    animation: posterDrop2 8000s linear infinite;
}

@keyframes posterDrop2 {
    from { background-position: 0 0; }
    to { background-position: 30000% 0; }
}

/* Image Container for Connection Images */
.connection-container {
    position: absolute; /* Make sure the images are above the background */
    top: 10%;           /* You can adjust this for the vertical position */
    right: -10%;
    transform: translateX(-50%); /* Centers the container horizontally */
    display: block;
    width: 50%;        /* You can adjust this as necessary */
    z-index: 10;       /* Ensure the images are on top of the background */
}

/* Individual image styling */
.connection {
    width: 50%;       /* Keep the original proportions */
    height: auto;      /* Maintain aspect ratio */
    margin-bottom: 35px; /* Space between images */
}



.Cat {
    position: absolute;  /* Positions the image relative to the nearest positioned ancestor */
    top: 20px;           /* Adjusts the distance from the top */
    left: 40px;          /* Adjusts the distance from the left */
    width: 80px;        /* Optionally, adjust the size of the image */
    height: auto;        /* Maintains the aspect ratio */
    transform: scaleX(-1);
}

.Cat {
    transition: transform 0.3s ease; /* Adds a smooth transition */
}

.Cat:hover {
    transform: scale(1.2); /* Increases the size to 120% on hover */
}
